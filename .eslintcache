[{"C:\\Users\\조하림\\Desktop\\nwitter\\src\\index.js":"1","C:\\Users\\조하림\\Desktop\\nwitter\\src\\components\\App.js":"2","C:\\Users\\조하림\\Desktop\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\조하림\\Desktop\\nwitter\\src\\routes\\Home.js":"4","C:\\Users\\조하림\\Desktop\\nwitter\\src\\routes\\Auth.js":"5","C:\\Users\\조하림\\Desktop\\nwitter\\src\\fbase.js":"6","C:\\Users\\조하림\\Desktop\\nwitter\\src\\components\\Navigation.js":"7","C:\\Users\\조하림\\Desktop\\nwitter\\src\\routes\\Profile.js":"8","C:\\Users\\조하림\\Desktop\\nwitter\\src\\components\\Nweet.js":"9"},{"size":238,"mtime":1607500276039,"results":"10","hashOfConfig":"11"},{"size":728,"mtime":1607579166054,"results":"12","hashOfConfig":"11"},{"size":778,"mtime":1607571220708,"results":"13","hashOfConfig":"11"},{"size":1850,"mtime":1607659962959,"results":"14","hashOfConfig":"11"},{"size":2101,"mtime":1607515855828,"results":"15","hashOfConfig":"11"},{"size":616,"mtime":1607562173022,"results":"16","hashOfConfig":"11"},{"size":295,"mtime":1607516789310,"results":"17","hashOfConfig":"11"},{"size":353,"mtime":1607517588601,"results":"18","hashOfConfig":"11"},{"size":1603,"mtime":1607578864588,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1sc5r7l",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},"C:\\Users\\조하림\\Desktop\\nwitter\\src\\index.js",["44"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport firebase from 'fbase';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["45","46"],"C:\\Users\\조하림\\Desktop\\nwitter\\src\\components\\App.js",["47"],"import React,{ useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport firebase from 'fbase';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [ init, setInit ] = useState(false);\n  const [ isLoggedIn, setLoggedIn ] = useState(false);\n  const [ userObj, setUserObj ] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setLoggedIn(true);\n        setUserObj(user);\n      }else {\n        setLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    }); \n  },[]);\n\n  return (\n  <>\n    {init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj}></AppRouter> : \"Initializing...\"}\n  </>);\n}\n\nexport default App;\n","C:\\Users\\조하림\\Desktop\\nwitter\\src\\components\\Router.js",[],"C:\\Users\\조하림\\Desktop\\nwitter\\src\\routes\\Home.js",["48"],"C:\\Users\\조하림\\Desktop\\nwitter\\src\\routes\\Auth.js",["49"],"import React, { useState } from 'react';\r\nimport { authService, firebaseInstance } from 'fbase';\r\n\r\nconst Auth = () => {\r\n  const [ email, setEmail ] = useState(\"\");\r\n  const [ password, setPassword ] = useState(\"\");\r\n  const [ newAccount, setNewAccount ] = useState(true);\r\n  const [ error, setError ] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const { target: { name , value } } = event;\r\n\r\n    if(name === \"email\"){\r\n      setEmail(value);\r\n    } else if(name === \"password\"){\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n   try {\r\n     let data;\r\n      if(newAccount){\r\n        data = await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error){\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((pre) => !pre );\r\n  };\r\n\r\n  const onSocialClick = async(event) => {\r\n    const { target: { name }} = event;\r\n    let provider;\r\n\r\n    if(name === \"google\"){\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name === \"github\"){\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  }; \r\n\r\n  return (\r\n  <div>\r\n    <form onSubmit={onSubmit}>\r\n      <input onChange={onChange} name=\"email\" type=\"email\" placeholder=\"Email\" required value={email}></input>\r\n      <input onChange={onChange} name=\"password\" type=\"password\" placeholder=\"Password\" required value={password}></input>\r\n      <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"}></input>\r\n      {error}\r\n    </form>\r\n    <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n    <div>\r\n      <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n      <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Auth;","C:\\Users\\조하림\\Desktop\\nwitter\\src\\fbase.js",[],"C:\\Users\\조하림\\Desktop\\nwitter\\src\\components\\Navigation.js",[],"C:\\Users\\조하림\\Desktop\\nwitter\\src\\routes\\Profile.js",["50"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { authService } from 'fbase';\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n  <>\r\n    <button onClick={onLogOutClick}>Log Out</button>\r\n  </>\r\n  );\r\n};","C:\\Users\\조하림\\Desktop\\nwitter\\src\\components\\Nweet.js",["51"],"import { dbService } from 'fbase';\r\nimport Rect, { useState } from 'react';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [ editing, setEditing ] = useState(false);\r\n  const [ newNweet, setNewNweet ] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async() => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if(ok){\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => {\r\n    setEditing(pre => !pre);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const { target: { value}} = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async(event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  return(\r\n  <div>\r\n    {\r\n      editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit}>\r\n              <input onChange={onChange} type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required></input>\r\n              <input type=\"submit\" value=\"Update Nweet\"></input>\r\n              </form>\r\n              <button onClick={toggleEditing}>Cancle</button>\r\n            </>\r\n          )}\r\n        </>\r\n        ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {isOwner && (\r\n          <>\r\n          <button onClick={onDeleteClick}>Delete Nweet</button>\r\n          <button onClick={toggleEditing}>Edit Nweet</button>\r\n          </>\r\n          )}\r\n        </>\r\n        )\r\n    }\r\n  </div>  \r\n  );\r\n};\r\n\r\nexport default Nweet;",{"ruleId":"52","severity":1,"message":"53","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":16},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"53","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":54,"column":25,"nodeType":"62","endLine":54,"endColumn":62},{"ruleId":"52","severity":1,"message":"63","line":27,"column":9,"nodeType":"54","messageId":"55","endLine":27,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":5,"column":1,"nodeType":"66","endLine":17,"endColumn":3},{"ruleId":"52","severity":1,"message":"67","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":12},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/alt-text","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","JSXOpeningElement","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Rect' is defined but never used.","no-global-assign","no-unsafe-negation"]